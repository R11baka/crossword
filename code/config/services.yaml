imports:
    - { resource: ../src/Crossword/config/services.yaml }
    - { resource: ../src/Dictionary/config/services.yaml }
    - { resource: ../src/Game/config/services.yaml }
    - { resource: ../src/SharedKernel/config/services.yaml }
    - { resource: ../src/Swagger/config/services.yaml }

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            $redisHost: '%env(resolve:REDIS_HOST)%'
            $redisPort: '%env(resolve:REDIS_PORT)%'
            $elasticHosts: ['%env(resolve:ELASTIC_HOST_1)%']
            $dictionaryList: '%dictionary_storage%'
            $googleApiHost: '%env(resolve:GOOGLE_DICTIONARY_API)%'
            $wikipediaApiHost: '%env(resolve:WIKIPEDIA_DICTIONARY_API)%'
            $dictionaryApiHost: '%env(resolve:DICTIONARY_API)%'
            $crosswordApiHost: '%env(resolve:CROSSWORD_API)%'
    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude:
            - '../src/SharedKernel/config/'
            - '../src/Swagger/config/'
            - '../src/Swagger/tests/'
            - '../src/Game/config/'
            - '../src/Game/tests/'
            - '../src/Game/Features/Player/DomainEventsSubscriber.php'
            - '../src/Game/Features/Authorization/PlayerAuthAction.php'
            - '../src/Game/Features/Authorization/ViewLoginPageAction.php'
            - '../src/Game/Features/Answers/CheckAnswerAction.php'
            - '../src/Game/Features/GamePlay/NewGameAction.php'
            - '../src/Game/Features/History/PlayerRatingAction.php'
            - '../src/Game/Features/Player/Player/Player.php'
            - '../src/Game/Features/History/History.php'
            - '../src/Game/Infrastructure/Repository/DoctrineMigrations/'
            - '../src/Crossword/config/'
            - '../src/Crossword/tests/'
            - '../src/Crossword/Features/Languages/LanguagesAction.php'
            - '../src/Crossword/Features/Types/TypesAction.php'
            - '../src/Crossword/Features/Receiver/ConstructAction.php'
            - '../src/Dictionary/config/'
            - '../src/Dictionary/tests/'
            - '../src/Dictionary/Features/PopulateStorage/Populate/WordsStoragePopulate.php'
            - '../src/Dictionary/Features/PopulateStorage/Upload/WordsStorageUpload.php'
            - '../src/Dictionary/Features/Languages/LanguagesAction.php'
            - '../src/Dictionary/Features/WordsFinder/WordAction.php'
            - '../src/Kernel.php'